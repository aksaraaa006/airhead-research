<!--
 * Copyright 2009 Keith Stevens 
 *
 * This file is part of the S-Space package and is covered under the terms and
 * conditions therein.
 *
 * The S-Space package is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation and distributed hereunder to you.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND NO REPRESENTATIONS OR WARRANTIES,
 * EXPRESS OR IMPLIED ARE MADE.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, WE MAKE
 * NO REPRESENTATIONS OR WARRANTIES OF MERCHANT- ABILITY OR FITNESS FOR ANY
 * PARTICULAR PURPOSE OR THAT THE USE OF THE LICENSED SOFTWARE OR DOCUMENTATION
 * WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS, TRADEMARKS OR OTHER
 * RIGHTS.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 -->

<project name="semanticspaces" default="compile">
  <property file="build.properties"/>

  <property name="lib.dir" value="lib"/>
  <property name="build.dir" value="classes"/>
  <property name="report.dir" value="reports"/>
  <property name="src.dir" value="src"/>
  <property name="package" value="edu.ucla.sspace"/>
  <property name="bin.dir" value="bin"/>
  <property name="version" value="0.1"/>
  
  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar"/>
  </path>

  <path id="run-classpath">
    <path refid="classpath"/>
    <pathelement location="${build.dir}"/>
  </path>

  <target name="all">
    <!-- put in dependencies here -->
  </target>
  
  <target name="compile">
    <!-- Ensure that the build output directories are always present -->
    <!-- REMINDER: since these are present in the svn repository, do we really
	 need to do this? -->
    <mkdir dir="classes"/>
    
    <!-- remove old jars and classes -->
    <delete>
      <fileset dir="classes" includes="**"/>
    </delete>

    <!-- Compile all of the classes and put the results in the classes
	 directory -->
     <javac srcdir="./" destdir="classes" classpathref="classpath" 
	    debug="true" debuglevel="lines,source">
       <compilerarg value="-Xlint"/>
       <compilerarg value="-g"/>
      <include name="src/**"/>
      <include name="lib/**"/>
      <exclude name="src/edu/ucla/sspace/hal/**"/>
    </javac>  
  </target>

  <!-- Removes all class files and built jar executables -->
  <target name="clean">
    <delete>
      <fileset dir="bin" includes="**"/>
      <fileset dir="classes" includes="**"/>
      <fileset dir="javadoc" includes="**"/>
    </delete>
  </target>

  <target name="compile-tests" description="Compile test Classes" 
	  depends="compile">
    <mkdir dir="classes"/>
    <!-- <ivy:cachepath conf="test" pathid="test.refid"/> -->
    <javac srcdir="test" destdir="classes" debug="true"
      classpathref="classpath" debuglevel="lines,source">	   
      <compilerarg value="-Xlint"/>
      <compilerarg value="-g"/>
    </javac>
  </target>

  <target name="dist" depends="lsa-jar,ri-jar">
    <!-- TODO: Create jar executables for all of the major algorithms -->
  </target>
  
  <target name="lsa-jar" depends="compile">
    <jar destfile="${bin.dir}/lsa.jar" basedir="classes">
      <include name="edu/**/*.class"/>
      <exclude name="jnt/*"/>
      <manifest>
	<!-- Who is building this jar? -->
	<attribute name="Built-By" value="${user.name}"/>
	<!-- Information about the program itself -->
	<attribute name="Implementation-Vendor" value="AIRhead Research"/>
	<attribute name="Implementation-Title" value="Latent Semantic Analysis"/>
	<attribute name="Implementation-Version" value="${version}"/>
	<attribute name="Main-Class" value="edu.ucla.sspace.mains.LSAMain"/>
      </manifest>
    </jar>
  </target>

  <target name="coals-jar" depends="compile">
    <jar destfile="${bin.dir}/coals.jar" basedir="classes">
      <include name="edu/**/*.class"/>
      <exclude name="jnt/*"/>
      <manifest>
	<!-- Who is building this jar? -->
	<attribute name="Built-By" value="${user.name}"/>
	<!-- Information about the program itself -->
	<attribute name="Implementation-Vendor" value="AIRhead Research"/>
	<attribute name="Implementation-Title" value="Coals"/>
	<attribute name="Implementation-Version" value="${version}"/>
	<attribute name="Main-Class" value="edu.ucla.sspace.mains.CoalsMain"/>
      </manifest>
    </jar>
  </target>

  <target name="ri-jar" depends="compile">
    <jar destfile="${bin.dir}/random-indexing.jar" basedir="classes">
      <include name="edu/**/*.class"/>
      <exclude name="jnt/*"/>
      <manifest>
	<!-- Who is building this jar? -->
	<attribute name="Built-By" value="${user.name}"/>
	<!-- Information about the program itself -->
	<attribute name="Implementation-Vendor" value="AIRhead Research"/>
	<attribute name="Implementation-Title" value="Random Indexing"/>
	<attribute name="Implementation-Version" value="${version}"/>
	<attribute name="Main-Class" value="edu.ucla.sspace.mains.RandomIndexingMain"/>
      </manifest>
    </jar>
  </target>


  <target name="test" depends="compile-tests">
    <junit printsummary="yes" fork="yes" haltonfailure="no">
      <jvmarg value="-Xmx1g"/>
      <jvmarg value="-debug"/>
      <classpath refid="run-classpath"/> 
      <formatter type="plain"/>
      <test name="edu.ucla.sspace.coals.CoalsTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.ArgOptionsTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.ClusterTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.DocumentPreprocessorTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.FileBasedSemanticSpaceTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.HashMultiMapTests" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.IntegerMapTests" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.MatricesTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.MatrixIOtests" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.NormalizeTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.SimilarityTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.StringUtilsTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.TestWordIterator" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.TreeMultiMapTests" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.TrieMapTests" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.matrix.DiagonalMatrixTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.matrix.GrowingSparseMatrixTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.matrix.OnDiskMatrixTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.common.matrix.SparseMatrixTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.evaluation.WordSelectionEvalTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.evaluation.WordSimilarityEvalTest" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.ri.TestPermutation" todir="${report.dir}"/>
      <test name="edu.ucla.sspace.ri.TestRandomIndexing" todir="${report.dir}"/>
    </junit>
  </target>

  <target name="javadoc" description="Create Javadocs" depends="compile">
    <javadoc destdir="javadoc/" classpathref="classpath">
      <link href="http://java.sun.com/javase/6/docs/api/"/>
      <fileset dir="${src.dir}/" includes="**/*.java"/>
    </javadoc>
  </target>
</project>
