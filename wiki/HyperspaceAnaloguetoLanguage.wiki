_A description of the Hyperspace Analogue to Language implementation of the S-Space package._

= Introduction =

Hyperspace Analogue to Language (HAL) creates a semantic space from word co-occurrences. A word-by-word matrix is formed with each element is the strength of association between the word represented by the row and the word represented by the column. The user of the algorithm then has the option to drop out low entropy columns from the matrix.

As the text is analyzed, a focus word is placed at the beginning of a ten word window and values that are inversely proportional to the distance from the focus are recorded in the matrix in the focus word's row and the window's given word's column. These values are added up until the end of the text is reached, at which point the user my access semantic vectors for each word that represent the meaning of the word. These vectors are compared to find similarities between words.

For more information on HAL, the following paper is the source of this algorithm:

    * Lund, K., & Burgess, C. (1996). Producing high-dimensional semantic spaces from lexical co-occurrence. Behavior Research Methods, Instrumentation, and Computers, 28, 203-208. Available [http://locutus.ucr.edu/reprintPDFs/lb96brmic.pdf here].


= HAL Implementation =

All of HAL is contained on one file, HAL.java.

"Documents" are given to the algorithm, which allow the user to segment the corpus based on paragraph or sentence boundaries. This has the effect of removing co-occurrence relationships between words on boundaries. Segmentation is not required and is at the users discretion.

==Software Requirements==

HAL requires Java 6.
