#summary A description of the Coals implementation of the S-Space package.
#labels Featured

= Introduction =

Coals is an algorithm that uses a collection of documents to construct a a semantic space.  The algorithm constructs a word-by-word matrix where each element in the matrix represents how frequently word_i occurs with word_j.  The matrix is then normalized by correlation, and any negative values are set to zero and all other values are replaced by it's square root.  Then, optionally, the [http://en.wikipedia.org/wiki/Singular_value_decomposition Singular Value Decomposition] (SVD) is calculated for the word-word matrix to produce three matrices, U - the wordspace, &Sigma; - the singular values, and V - the document space.  (See Wikipedia for more details on the SVD).  The columns of U are then truncated to a small number of dimensions (typically 800), which produces the final semantic vectors.

For more information on Coals, the following paper is the central resource:


  * D. L. T. Rohde, L. M. Gonnerman, D. C. Plaut, "An Improved Model of Semantic Similarity Based on Lexical Co-Occurrence." _Cognitive Science_

= S-Space Implementation =

The current S-Space implementation of Coals is captured in two files.  {{{Coals.java}}} contains all of the algorithmic implementation, and is suitable for use in other code as a library.  {{{CoalsMain.java}}} is a command-line invokable version of Coals that uses the {{{Coals}}} class.  This class is provided as coals.jar on the release packages.

== Software Requirements ==

Coals requires use of the SingularValueDecomposition interface.

== Running Coals from the command-line ==

Coals can be invoked either using {{{java edu.ucla.sspace.mains.CoalsMain}}} or through the jar release {{{java -jar coals.jar}}}.  Both ways are equivalent.

We provide the following options for changing the behavior of Coals and how the program is run.

  * Input document sources (must provide at least one)
    * {{{-l | --fileList <filename>}}} a file containing a list of file names, each of which is treated as a separate document.
    * {{{-d | --docFile <filename>}}} a file where each line is treated as a separate document. This is the preferred option for Coals operations for large numbers of documents due to reduced I/O demands. 

  * Coals Options
    * {{{-s | --svddimension <int>}}} how many dimensions to use for the SVD vectors. See Coals for default value
    * {{{-s | --dimensions <int>}}} the number of most frequent words to retain for the word-word matrix. See Coals for default value.
    * {{{-r | --reduce}}} If passed, the word-word matrix will be reduced using SVD, otherwise no reduction will be done.
    
  * Program Options
    * {{{-t | --threads <int>}}} how many threads to use when processing the documents. The default is one per core.
    * {{{-w | --overwrite <boolean>}}} specifies whether to overwrite the existing output files. The default is true. If set to false, a unique integer is inserted into the file name.
    * {{{-v | --verbose}}} specifies whether to print runtime information to standard out


The program will then produce a file that contains the entire semantic space.  Each line in the file is formatted as follows:
  {{{word name|value-1 value-2 ... value-N}}}, where N is the number of dimensions in the semantic space.

= Acknowledgments =

  * We are grateful to Doug Rohde for making the SVDLIBC program freely available.
 